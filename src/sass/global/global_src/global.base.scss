@charset "utf-8";
/* ============================================================
 * LHUI - Global base class 全局基本常用类 每个页面最多引入一次
 * 否则会产生多余代码，导致页面出现位置异常
============================================================ */
.global-body{ font-family: $baseFontfamily; font-size: $baseFontSize; line-height: $baseLineheight; background-color: $baseBackgroundColor }
.global-container{ margin: 0 auto 0; width: $mainPageWidth; background-color: $baseBackgroundColor; }
.jt-scroll-wrapper{ background-color: $baseBackgroundColor; }
.jt-scroll-wrapper.mui-segmented-control{ background-color:none; }
.jt-global-body .mui-table-view{ width: $mainPageWidth; margin: 0 auto; }

.fn-ofh {//超出隐藏
	overflow: hidden !important;
}
.fn-ofv {//超出显示
	overflow: visible !important;
}

.fn-tbl {//以表格方式显示
    display: table !important;
    width: 100%;
    table-layout: fixed;
}
.fn-tblcell {//以单元格方式显示
    display: table-cell !important;
    position: relative;
    width: 100%;
    height: 100%;
    vertical-align: middle;
}

.fn-text-lowercase {//转换成小写字母
    text-transform: lowercase;
}
.fn-text-uppercase {//转换成大写字母
    text-transform: uppercase;
}
.fn-text-capitalize {//文本中的每个单词以大写字母开头
    text-transform: capitalize;
}

.fn-ellipsis {//单行超出文本以省略号显示
    overflow: hidden;
    word-wrap: normal;
    white-space: nowrap;
    -o-text-overflow: ellipsis;
    text-overflow: ellipsis;
}
.fn-ellipsis-2 {//多行文本超出两行省略号显示
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
    word-wrap: break-word;
    white-space: nowrap;
    text-overflow: ellipsis;
}

//边距 
@function pxToRem2($num){
	@return $num/75*1rem;
	
}
//margin外边距离
$direction: (t,top), (r,right), (b,bottom), (l,left);
$distance: 5, 10, 15, 20, 30, 40;
@each $dirshot, $dir in $direction{
	@each $dis in $distance {
		.m#{$dirshot}-#{$dis}{
			margin-#{$dir}: pxToRem2($dis);//用原有的函数pxToRem会报错
		}
		
	}
}
//编译后为 .mr-5{margin-right: .06667rem;} 其它的一样 只类名和值不一样，类名为：mr-5,mr-10 ...;mt-5,mt-10....;ml-5 ....;mb-5 .... ；数字依次为$distance中的值
//编译后的类可以在html中加类名用  也可以用sass继承

//padding内边距离
@each $dirshot, $dir in $direction{
	@each $dis in $distance {
		.p#{$dirshot}-#{$dis}{
			padding-#{$dir}: pxToRem2($dis);//用原有的函数pxToRem会报错
		}
		
	}
}
//编译后为 .pt-5{padding-right: .06667rem;} 其它的一样 只类名和值不一样，类名为：pr-5,pr-10 ...;pt-5,pt-10....;pl-5 ....;pb-5 .... ；数字依次为$distance中的值
//编译后的类可以在html中加类名用  也可以用sass继承
